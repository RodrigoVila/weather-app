{"version":3,"sources":["components/CurrentCity.js","components/Card.js","components/Forecast.js","components/Cities.js","App.js","index.js"],"names":["day","Date","getDay","CurrentCity","props","useState","city","setCity","currentCity","setCurrentCity","temperature","setTemperature","icon","setIcon","firstReq","axios","get","then","response","data","secondReq","all","spread","firstRes","secondRes","toUpperCase","main","temp","icono","weather","catch","errors","console","error","style","width","height","className","src","Math","ceil","moment","require","locale","Card","reading","newDate","weekday","dt","setTime","format","slice","Forecast","dayCards","state","dailyData","map","index","key","isFetching","fullData","this","setState","fetch","res","json","list","filter","dt_txt","includes","display","React","Component","Cities","datos","App","alignItems","to","exact","path","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd34bde9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"c46975f761ebd2c5a5e3a897ca1001f3\";\r\n\r\nconst daysOfWeek = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\nconst dayOfWeek = new Date();\r\nconst day = daysOfWeek[dayOfWeek.getDay()];\r\n\r\nconst CurrentCity = props => {\r\n  // State Hooks\r\n  const [city, setCity] = useState(\"\");\r\n  const [currentCity, setCurrentCity] = useState(\"\");\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n\r\n  // Get request para geolocacion desde IP-API.\r\n  //TODO: Solucionar esto: No tendria que realizar 2 request a ip-api ni setear 2 hooks distintos para la city, pero fue la unica forma que encontre de actualizar el get a OWM.\r\n  const firstReq = axios.get(\"http://ip-api.com/json/\");\r\n\r\n  firstReq.then(function(response) {\r\n    setCurrentCity(response.data.city);\r\n  });\r\n\r\n  // Get request para OpenWeatherMap API\r\n  const secondReq = axios.get(\r\n    `http://api.openweathermap.org/data/2.5/weather?q=${currentCity}&appid=${API_KEY}&units=metric`\r\n  );\r\n\r\n  axios\r\n    .all([firstReq, secondReq])\r\n    .then(\r\n      axios.spread((firstRes, secondRes) => {\r\n        setCity(firstRes.data.city.toUpperCase());\r\n        setTemperature(secondRes.data.main.temp);\r\n        const icono = secondRes.data.weather[0].icon;\r\n        setIcon(`http://openweathermap.org/img/wn/${icono}@2x.png`);\r\n      })\r\n    )\r\n    .catch(errors => {\r\n      console.error(errors);\r\n    });\r\n\r\n    \r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <div className=\"city-title\">{city}</div>\r\n      <img className=\"city-icon\" src={icon}/>\r\n      <div className=\"city-temp\">{Math.ceil(temperature)}º</div>\r\n      <div className=\"city-date\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentCity;\r\n","import React from \"react\";\r\nvar moment = require(\"moment\");\r\nmoment.locale('es')\r\n\r\nconst Card = ({ reading }) => {\r\n  let newDate = new Date();\r\n  const weekday = reading.dt * 1000;\r\n  newDate.setTime(weekday);\r\n\r\n  const icon = `http://openweathermap.org/img/wn/${reading.weather[0].icon}@2x.png`;\r\n\r\n  return (\r\n    <div className=\"date\">\r\n      <p className=\"nextDays-temp\">{Math.ceil(reading.main.temp)}°</p>\r\n      <img className=\"nextDays-icon\" src={icon} />\r\n      <p className=\"nextDays-day\">\r\n        {moment(newDate)\r\n          .format(\"dddd\")\r\n          .slice(0, 3)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nlet api = \"718a19e59fe8c687c0ff168450145d0e\";\r\n\r\nclass Forecast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: false,\r\n      city: this.props.city,\r\n      fullData: [],\r\n      dailyData: [],\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isFetching: true });\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&appid=${api}&units=metric`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const dailyData = data.list.filter(reading =>\r\n          reading.dt_txt.includes(\"18:00:00\")\r\n        );\r\n        this.setState({\r\n          fullData: data.list,\r\n          dailyData: dailyData\r\n        });\r\n      });\r\n  }\r\n\r\n  dayCards = () => {\r\n    return this.state.dailyData.map((reading, index) => (\r\n      <Card reading={reading} key={index} />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"flex\", width: \"100%\" }}>{this.dayCards()}</div>\r\n    );\r\n  }\r\n}\r\nexport default Forecast;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst daysOfWeek = [\r\n  \"Domingo\",\r\n  \"Lunes\",\r\n  \"Martes\",\r\n  \"Miercoles\",\r\n  \"Jueves\",\r\n  \"Viernes\",\r\n  \"Sabado\"\r\n];\r\nconst dayOfWeek = new Date();\r\nconst day = daysOfWeek[dayOfWeek.getDay()];\r\n\r\nconst Cities = props => {\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const city = props.city;\r\n\r\n  axios\r\n    .get(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c46975f761ebd2c5a5e3a897ca1001f3&units=metric`\r\n    )\r\n    .then(function(response) {\r\n      const datos = response.data;\r\n      const icono = datos.weather[0].icon;\r\n      setIcon(`http://openweathermap.org/img/wn/${icono}@2x.png`);\r\n      setTemperature(datos.main.temp);\r\n    });\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <div className=\"city-title\">{city.toUpperCase()}</div>\r\n      <img className=\"city-icon\" src={icon}/>\r\n      <div className=\"city-temp\">{Math.ceil(temperature)}º</div>\r\n      <div className=\"city-date\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cities;\r\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport CurrentCity from \"./components/CurrentCity\";\nimport Forecast from \"./components/Forecast\";\nimport Cities from \"./components/Cities\";\n\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <Router>\n        <ul>\n          <li>\n            <Link to=\"/main\">Ciudad Actual</Link>\n          </li>\n\n          <li>\n            <Link to=\"/bogota\">Bogota</Link>\n          </li>\n\n          <li>\n            <Link to=\"/toronto\">Toronto</Link>\n          </li>\n\n          <li>\n            <Link to=\"/barcelona\">Barcelona</Link>\n          </li>\n\n          <li>\n            <Link to=\"/milan\">Milan</Link>\n          </li>\n\n          <li>\n            <Link to=\"/amsterdam\">Amsterdam</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Fragment>\n            <div className=\"main-container\">\n              <div className=\"info-container\">\n                <Route exact path=\"/main\">\n                  <CurrentCity />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"olivos\" />\n                  </div>\n                </Route>\n                <Redirect from=\"/\" to=\"/main\" />\n\n                <Route path=\"/Bogota\">\n                  <Cities city=\"bogota\" />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"bogota\" />\n                  </div>\n                </Route>\n\n                <Route path=\"/toronto\">\n                  <Cities city=\"toronto\" />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"toronto\" />\n                  </div>\n                </Route>\n\n                <Route path=\"/barcelona\">\n                  <Cities city=\"barcelona\" />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"barcelona\" />\n                  </div>\n                </Route>\n\n                <Route path=\"/milan\">\n                  <Cities city=\"milan\" />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"milan\" />\n                  </div>\n                </Route>\n\n                <Route path=\"/amsterdam\">\n                  <Cities city=\"amsterdam\" />\n                  <div className=\"forecast-container\">\n                    <Forecast city=\"amsterdam\" />\n                  </div>\n                </Route>\n              </div>\n            </div>\n          </Fragment>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}